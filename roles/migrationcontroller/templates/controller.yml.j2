{% if reconcile_migrationcontroller %}
---
apiVersion: v1
kind: Secret
metadata:
  name: webhook-server-secret
  namespace: {{ mig_namespace }}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
  name: controller-manager-service
  namespace: {{ mig_namespace }}
spec:
  ports:
  - port: 443
  selector:
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
  name: migration-controller
  namespace: {{ mig_namespace }}
data:
  PV_LIMIT: "{{ mig_pv_limit }}"
  POD_LIMIT: "{{ mig_pod_limit }}"
  NAMESPACE_LIMIT: "{{ mig_namespace_limit }}"
  CORS_ALLOWED_ORIGINS: {{ cors_origins | join(' ') }}
  WORKING_DIR: {{ discovery_volume_path }}
{% endif %}
---
{% if lookup('k8s', cluster_info='version').kubernetes.minor|replace('+', '')|int < 9 %}
apiVersion: apps/v1beta1
{% else %}
apiVersion: apps/v1
{% endif %}
kind: Deployment
metadata:
  labels:
    app: migration
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
{% if reconcile_migrationcontroller %}
  name: migration-controller
{% endif %}
{% if reconcile_migrationtenant %}
  name: {{ meta.namespace }}-{{ meta.name }}
{% endif %}
  namespace: {{ mig_namespace }}
spec:
  selector:
    matchLabels:
      app: migration
      control-plane: controller-manager
      controller-tools.k8s.io: "1.0"
  serviceName: controller-manager-service
  template:
    metadata:
      labels:
        app: migration
        control-plane: controller-manager
        controller-tools.k8s.io: "1.0"
      annotations:
        configHash: "{{ (cors_origins | string)
        | join(mig_pv_limit | string)
        | join(mig_pod_limit | string)
        | join(mig_namespace_limit | string)
        | join(discovery_volume_path | string)
        | hash('sha1') }}"
    spec:
      serviceAccountName: migration-controller
      containers:
      - command:
        - /manager
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: ROLE
          value: cluster,plan,migration,storage
        - name: OPERATOR_NAMESPACE
          value: {{ mig_namespace }}
{% if reconcile_migrationtenant %}
        - name: TENANT_NAMESPACE
          value: {{ meta.namespace }}
{% endif %}
        - name: SECRET_NAME
          value: webhook-server-secret
        - name: MIGRATION_REGISTRY_IMAGE
          value: {{ migration_registry_image_fqin }}
{% if http_proxy|length >0 %}
        - name: HTTP_PROXY
          value: {{ http_proxy }}
{% endif %}
{% if https_proxy|length >0 %}
        - name: HTTPS_PROXY
          value: {{ https_proxy }}
{% endif %}
{% if no_proxy|length >0 %}
        - name: NO_PROXY
          value: {{ no_proxy }}
{% endif %}
        - name: PRIVILEGED_NAMESPACE
          value: {{ mig_namespace }}
        - name: SANDBOX_NAMESPACE
          value: {{ sandbox_namespace }}
        envFrom:
        - configMapRef:
            name: migration-controller
        image: {{ mig_controller_image_fqin }}
        imagePullPolicy: "{{ image_pull_policy }}"
        name: cam
        ports:
        - containerPort: 9876
          name: webhook-server
          protocol: TCP
        resources:
          limits:
            cpu: {{ mig_controller_limits_cpu }}
            memory: {{ mig_controller_limits_memory }}
          requests:
            cpu: {{ mig_controller_requests_cpu }}
            memory: {{ mig_controller_requests_memory }}
        volumeMounts:
        - mountPath: /tmp/cert
          name: cert
          readOnly: true
{% if reconcile_migrationcontroller|bool %}
      - command:
        - /manager
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: ROLE
          value: discovery
        - name: SECRET_NAME
          value: webhook-server-secret
{% if http_proxy|length >0 %}
        - name: HTTP_PROXY
          value: {{ http_proxy }}
{% endif %}
{% if https_proxy|length >0 %}
        - name: HTTPS_PROXY
          value: {{ https_proxy }}
{% endif %}
{% if no_proxy|length >0 %}
        - name: NO_PROXY
          value: {{ no_proxy }}
{% endif %}
        - name: PRIVILEGED_NAMESPACE
          value: {{ mig_namespace }}
        - name: SANDBOX_NAMESPACE
          value: {{ sandbox_namespace }}
        envFrom:
        - configMapRef:
            name: migration-controller
        image: {{ mig_controller_image_fqin }}
        imagePullPolicy: "{{ image_pull_policy }}"
        name: discovery
        ports:
        - name: api
          containerPort: 8080
          name: webhook-server
          protocol: TCP
        resources:
          limits:
            cpu: {{ mig_controller_limits_cpu }}
            memory: {{ mig_controller_limits_memory }}
          requests:
            cpu: {{ mig_controller_requests_cpu }}
            memory: {{ mig_controller_requests_memory }}
        volumeMounts:
        - mountPath: {{ discovery_volume_path }}
          name: discovery
{% endif %}
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-secret
      - name: discovery
        emptyDir: {}
